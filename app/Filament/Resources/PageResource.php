<?php

namespace App\Filament\Resources;

use App\Filament\Resources\PageResource\Pages;
use App\Filament\Resources\PageResource\RelationManagers;
use App\Models\Page;
use App\Traits\BranchTrait;
use Filament\Forms;
use Filament\Forms\Components\Card;
use Filament\Resources\Form;
use Filament\Resources\Resource;
use Filament\Resources\Table;
use Filament\Tables;
use Filament\Tables\Columns\TextColumn;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class PageResource extends Resource
{
    protected static ?string $model = Page::class;
    protected static ?string $navigationLabel = 'Страницы';
    protected static ?string $breadcrumb = 'Страницы';
    protected static ?string $label = 'Страницы';
    protected static ?string $pluralLabel = 'Страницы';
    protected static ?string $navigationIcon = 'heroicon-o-collection';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Card::make()->schema([
                    Forms\Components\Grid::make(['lg' => 2,])->schema([
                        Forms\Components\TextInput::make('h1')->label('H1')->required(),
                        Forms\Components\TextInput::make('title')->label('title')->required(),
                        Forms\Components\Textarea::make('content')->label('Контент')->required(),
                        Forms\Components\TextInput::make('name')->label('Путь')->required(),
                        Forms\Components\TextInput::make('description')->label('description')->required(),
                    ]),

                ])
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                //
                TextColumn::make('h1')->limit(15),
                TextColumn::make('title')->limit(15),
                TextColumn::make('content')->limit(15),
                TextColumn::make('name')->limit(15),
                TextColumn::make('description')->limit(15),
            ])
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\DeleteBulkAction::make(),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }
    public static function canCreate(): bool
    {
        return false; // TODO: Change the autogenerated stub
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListPages::route('/'),
            'create' => Pages\CreatePage::route('/create'),
            'edit' => Pages\EditPage::route('/{record}/edit'),
        ];
    }
}
